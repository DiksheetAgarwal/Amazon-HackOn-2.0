<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Avatar</title>
    <style>
      body {
        margin: 0;
      }
    </style>
    <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>

    <!-- three.js -->
    <script src="https://unpkg.com/three@0.126.0/build/three.js"></script>
    <script src="https://unpkg.com/three@0.126.0/examples/js/loaders/GLTFLoader.js"></script>
  </head>
  <body>
    <div style="position: absolute; bottom: 0; font-size: 10000px">sthat</div>
    <script>
      const scene = new THREE.Scene();
      scene.background = new THREE.Color(0xffffff);

      const loader = new THREE.GLTFLoader();

      const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000
      );
      camera.position.set(0, 2, 5);

      const renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      renderer.shadowMap.enabled = true;
      renderer.shadowMap.type = THREE.PCFSoftShadowMap;

      document.body.appendChild(renderer.domElement);

      // get avatar_model_url from session storage
      let avatar_model_url = sessionStorage.getItem("avatar_url");

      const planeGeometry = new THREE.PlaneGeometry(20, 20, 1, 32);
      const planeMaterial = new THREE.MeshStandardMaterial({ color: 0xffffff });
      const plane = new THREE.Mesh(planeGeometry, planeMaterial);
      plane.position.set(0, 0, -1);
      plane.receiveShadow = true;
      scene.add(plane);

      const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444, 0.4);
      hemiLight.position.set(0, 20, 0);
      scene.add(hemiLight);

      const dirLight = new THREE.DirectionalLight(0xffffff, 0.8);
      dirLight.position.set(1, 1, -10);
      dirLight.castShadow = true;
      scene.add(dirLight);

      var ambientLight = new THREE.AmbientLight(0xffffff);
      scene.add(ambientLight);

      const helper = new THREE.CameraHelper(dirLight.shadow.camera);
      scene.add(helper);

      let glb_model_scene;
      loader.load(avatar_model_url, function (glb) {
        glb_model_scene = glb.scene;
        glb_model_scene.scale.set(2, 2, 2);
        glb_model_scene.castShadow = true;
        scene.add(glb_model_scene);
      });

      function animate() {
        requestAnimationFrame(animate);
        glb_model_scene.rotation.y += 0.01;
        renderer.render(scene, camera);
      }
      animate();
    </script>
  </body>
</html>
